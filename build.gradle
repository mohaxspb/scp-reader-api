buildscript {
    ext {
        app_version = "1.3.6"

        kotlin_version = '1.4.31'
        spring_boot_version = '2.3.3.RELEASE'

        ext['netty.version'] = '4.1.36.Final'

        //fix tomcat deploy error
        jaxb_api_version = '2.3.0'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //spring
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        // Required for Kotlin integration for spring
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        //fixes no-arg constructor errors
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

plugins {
    //db migrations
    id "org.flywaydb.flyway" version "6.5.4"

    //to fix CreateProcess error=206, Имя файла или его расширение имеет слишком большую длину
    id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"
}

group 'ru.kuchanov.scp'
version "$app_version"

apply plugin: 'java'
apply plugin: 'kotlin'
//See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: "kotlin-spring"
//use entities with data classes
apply plugin: "kotlin-jpa"
//no arg
apply plugin: "kotlin-noarg"

//spring boot
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'


//artifacts
bootWar {
    version ""
    //we need to specify context path here if we use war file in external tomcat
    //we use `#` instead of `/` to deploy `scp-reader/api` on tomcat
    archiveFileName.set("scp-reader#api.${archiveExtension.get()}")
}

//to be able to run with task args to define correct properties file
//i.e. `bootRun -Dspring.profiles.active=dev`
bootRun.systemProperties = System.properties as Map<String, ?>
bootRun.main = 'ru.kuchanov.scpreaderapi.Application'


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //need as spring version of netty conflicts with one in firebase libs
    implementation 'io.netty:netty-all:4.1.36.Final'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    //fix classNotFound
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //spring
    implementation "org.springframework.boot:spring-boot-starter-web"
    //tomcat
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //info
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    //data
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    //security
    implementation "org.springframework.boot:spring-boot-starter-security"
    //mail
    implementation "org.springframework.boot:spring-boot-starter-mail"
    //oauth2
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.3.0.RELEASE'
    //cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework:spring-context-support:5.2.5.RELEASE'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.1'
    //tests
    implementation 'org.springframework.boot:spring-boot-starter-test'
    //spring END

    //postgresql
    implementation 'org.postgresql:postgresql:42.2.1'

    //db migrations
    implementation "org.flywaydb:flyway-core:6.5.4"

    //apache
    implementation 'commons-io:commons-io:2.6'

    //rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.1"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    //google
    implementation 'com.google.api-client:google-api-client:1.29.0'
    //purchases
    implementation 'com.google.apis:google-api-services-androidpublisher:v3-rev90-1.25.0'
    implementation 'com.google.api-client:google-api-client-jackson2:1.29.0'

    //firebase
    implementation 'com.google.firebase:firebase-admin:6.8.1'

    //Retrofit
    implementation('com.squareup.retrofit2:retrofit:2.4.0') { exclude module: 'okhttp' }
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    //connection poll
    implementation 'com.zaxxer:HikariCP:3.3.1'

    //jsoup
    api 'org.jsoup:jsoup:1.11.3'

    //testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'com.jayway.jsonpath:json-path:2.2.0'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    //testing END

    //fix running on java9+
    //see https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
    implementation "com.sun.xml.bind:jaxb-core:$jaxb_api_version"
    implementation "com.sun.xml.bind:jaxb-impl:$jaxb_api_version"
    implementation 'javax.transaction:javax.transaction-api:1.2'
    implementation "javax.xml.bind:jaxb-api:$jaxb_api_version"
    implementation "org.glassfish.jaxb:jaxb-runtime:$jaxb_api_version"
    implementation 'javax.activation:activation:1.1.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

noArg {
    annotation("ru.kuchanov.scpreaderapi.utils.NoArgConstructor")
}