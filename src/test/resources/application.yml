server:
    port: 8080
hibernate:
    show_sql: false
logging:
    file: logs/myLog.log
    file.max-history: 15
    level:
        org:
            flywaydb: INFO
            hibernate: ERROR
            hibernate.SQL: WARN
            hibernate.type: WARN
            springframework: ERROR
            springframework.web: DEBUG
        root: INFO
    pattern:
        console: '%d{HH:mm:ss.SSS} %msg%n'
spring:
    datasource:
        hikari:
            auto-commit: true
            connection-timeout: 20000
            idle-timeout: 10000
            max-lifetime: 1000
            maximum-pool-size: 20
            minimum-idle: 10
        password: testtest
        platform: postgres
        url: jdbc:postgresql://localhost:5432/${my.db.name}
        username: postgres
    flyway:
        baseline-on-migrate: true
        locations: classpath:migration
        password: ${spring.datasource.password}
        url: ${spring.datasource.url}
        user: ${spring.datasource.username}
    jackson:
        serialization:
            indent_output: true
    jmx:
        default-domain: ${my.db.name}
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQL9Dialect
        hibernate:
            ddl-auto: none
        properties:
            hibernate:
                connection:
                    charSet: UTF-8
                temp:
                    use_jdbc_metadata_defaults: false
    main:
        banner-mode: 'off'
    servlet:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB

my:
    api:
        ch:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        de:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        en:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        es:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        fr:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        it:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        pl:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        pt:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        ru:
            facebook:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
            google:
                client_id: CLIENT_ID_HERE
                client_secret: CLIENT_SECRET_HERE
        vk:
            app_id: APP_ID
            art_scp:
                album_id: id
                group_id: group_id
            client_secret: CLIENT_SECRET_HERE
            service_access_key: key
    db:
        name: scp_reader_test

angular:
    href:
    port: ':4200'